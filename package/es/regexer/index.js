/*
 * @Descripttion: 正则表达式
 * @version: 0.0.1
 * @Author: huangjunquan
 * @Date: 2019-06-12 11:17:47
 * @LastEditors: huangjunquan
 * @LastEditTime: 2019-06-25 17:18:22
 */

export default [
  {
    type: "special",
    rules: ["含特殊字符组成的非空字符串"],
    text: "是否含特殊字符",
    success: ["!@#$$%^&*())", "1!"],
    error: ["123456", "qazxsw"],
    value: /[`~!@#$%^&*()_\-+=<>?:"{}|,.\\/;'\\[\]·~！@#￥%……&*（）——\-+={}|《》？：“”【】、；‘’，。、]/im
  },
  {
    type: "chinese",
    rules: ["只能由中文汉字组成的非空字符串"],
    text: "是否是中文",
    success: ["一二三"],
    error: ["123456", "qazxsw"],
    value: /^[\u4E00-\u9FA5]+$/
  },
  {
    type: "english",
    rules: ["只能由'a-z'|'A-Z'组成的非空字符串"],
    text: "是否是英文",
    success: ["qazxsw", "QAZWSX", "qazWSX"],
    error: ["123456", "123qaz"],
    value: /^[a-zA-Z]+$/
  },
  {
    type: "english-upper",
    rules: ["只能由'A-Z'组成的非空字符串"],
    text: "是否是大写英文",
    success: ["QAZWSX"],
    error: ["qazwsx"],
    value: /^[A-Z]+$/
  },
  {
    type: "english-lower",
    rules: ["只能由'a-z'组成的非空字符串"],
    text: "是否是小写英文",
    success: ["qazxsw"],
    error: ["QAZWSX"],
    value: /^[a-z]+$/
  },

  {
    type: "number",
    rules: ["只能由0-9组成的非空字符串"],
    text: "是否是数字",
    success: ["13231", "093920"],
    error: ["dsdsdsdsds", "0.100102010201"],
    value: /^[0-9]+$/
  },
  {
    type: "number-free",
    rules: ["只能由'0-9'|'.'|'-'组成的非空字符串", "小数点至多有一个，并且第一位不能是小数点", "以0打头，后面没有小数点，则0本身，且前面不能带'-'，否则，后面跟任意位的非全0的数字", "非0打头，后面没有小数点，则数值本身，否则后面跟任意位的任意数字"],
    text: "是否是合法的数字",
    success: ["1", "0", "10", "-1", "0.1", "0.01"],
    error: ["-0", "0.", "0.00", ".0", "01"],
    value: /(^(-)?0\.([0-9]*)?[1-9]+([0-9]*)?$)|(^[0]{1}$)|(^(-)?[1-9]([0-9]+)?(\.[0-9]+)?$)/
  },
  {
    type: "number-integer",
    rules: ["只能由'0-9'|'-'组成的非空字符串", "以0打头，则0本身"],
    text: "是否是整数",
    success: ["1", "0", "10", "-1"],
    error: ["-0", "0.1", "0.00", ".0", "0.001", "01"],
    value: /(^(-)?([1-9][0-9]*)$)|(^[0]{1}$)/
  },
  {
    type: "number-money",
    rules: ["只能由'0-9'|'.'组成的非空字符串", "小数点至多有一个，并且第一位不能是小数点", "以0打头，后面没有小数点，则0本身，否则后面跟不能全为0的至少一位数字", "非0打头，后面没有小数点，则数值本身，否则后面跟1-2位的任意数字"],
    success: ["0.01", "0.10", "0.1", "0", "1"],
    error: ["-0", "0.0", "0.00", ".0", "0.001", "-1", "01"],
    text: "是否是金钱格式",
    value: /(^[0]{1}$)|(^0\.[1-9]([0-9])?$)|(^0\.([0-9])?[1-9]$)|(^[1-9]([0-9]*)?(\.[0-9]{1,2})?$)/
  },
  {
    type: "mobile",
    rules: ["只能由0-9组成的11位非空字符串", "首位一定是1"],
    text: "是否是手机号码",
    success: ["13980464237"],
    error: ["02334455555"],
    value: /^1[0-9]{10}$/
  },
  {
    type: "tel",
    rules: ["只能由'0-9'|'-'组成的[7,8,11]位非空字符串"],
    text: "是否是座机号码",
    success: ["028-12345678", "0832-5231402", "12345678", "5231402"],
    error: ["02812345678"],
    value: /(^[0-9]{3}\-[0-9]{8}$)|(^[0-9]{4}\-[0-9]{7}$)|(^[0-9]{7,8}$)/
  },
  {
    type: "id-card",
    memo: "该方法只是简单的验证，更复杂的需要判断生日，地区，校验等",
    rules: ["长度只能是15位或18位", "若15位，则全部是数字", "若18位，则前17位全部是数字，最后一位可能是数字或字符x"],
    text: "是否是身份证号码",
    success: ["5110251992071806019", "511025199207180601x", "51102519920718"],
    error: ["511025199207180601o", "511025199"],
    value: /(^\d{15}$)|(^\d{17}(\d|X|x)$)/
  }
];

// let regex = /(^[0-9]{3}\-[0-9]{8}$)|(^[0-9]{4}\-[0-9]{7}$)|(^[0-9]{7,8}$)/
// console.log(regex.test('3456789'))
